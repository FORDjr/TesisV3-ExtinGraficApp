#!/bin/bash

# Script para configurar Apache como proxy reverso en puerto 80
echo "üåê Configurando Apache como proxy reverso..."
echo "üéØ Redirigir puerto 80 ‚Üí 8080 (puerto por defecto que funciona)"

# Detener Apache si est√° corriendo
echo "üõë Deteniendo Apache actual..."
service apache2 stop 2>/dev/null || true

# Instalar Apache si no est√° instalado
if ! command -v apache2 &> /dev/null; then
    echo "üì¶ Instalando Apache..."
    apt update
    apt install -y apache2
else
    echo "‚úÖ Apache ya est√° instalado"
fi

# Habilitar m√≥dulos necesarios
echo "üîß Habilitando m√≥dulos de Apache..."
a2enmod proxy
a2enmod proxy_http
a2enmod proxy_balancer
a2enmod lbmethod_byrequests
a2enmod headers

# Deshabilitar sitio por defecto
echo "üîß Deshabilitando sitio por defecto..."
a2dissite 000-default.conf 2>/dev/null || true

# Crear configuraci√≥n del sitio para puerto 80
echo "üìù Creando configuraci√≥n del sitio para puerto 80..."
cat > /etc/apache2/sites-available/java-proxy.conf << 'EOF'
<VirtualHost *:80>
    ServerName 146.83.198.35
    ServerAlias localhost
    DocumentRoot /var/www/html

    # Configuraci√≥n del proxy para redirigir al servidor Java
    ProxyPreserveHost On
    ProxyRequests Off

    # Redirigir todo el tr√°fico al servidor Java en puerto 8080
    ProxyPass / http://localhost:8080/
    ProxyPassReverse / http://localhost:8080/

    # Headers para mejor compatibilidad
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"

    # Manejo de OPTIONS para CORS
    <Location />
        # Responder a preflight OPTIONS
        SetEnvIf Request_Method OPTIONS cors_method
        Header always set Access-Control-Allow-Origin "*" env=cors_method
        Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" env=cors_method
        Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" env=cors_method
        Header always set Access-Control-Max-Age "3600" env=cors_method
    </Location>

    # Logs
    ErrorLog ${APACHE_LOG_DIR}/java-proxy_error.log
    CustomLog ${APACHE_LOG_DIR}/java-proxy_access.log combined
</VirtualHost>
EOF

# Habilitar el sitio
echo "‚úÖ Habilitando sitio en puerto 80..."
a2ensite java-proxy.conf

# Asegurar que Apache escuche en puerto 80
echo "üîß Configurando Apache para puerto 80..."
echo "Listen 80" > /etc/apache2/ports.conf

# Reiniciar Apache
echo "üîÑ Reiniciando Apache..."
service apache2 restart

# Esperar a que Apache inicie
sleep 3

# Verificar configuraci√≥n
echo "üîç Verificando configuraci√≥n..."
if pgrep apache2 > /dev/null; then
    echo "‚úÖ Apache est√° corriendo"
else
    echo "‚ùå Apache no est√° corriendo"
    echo "üìã Intentando iniciar Apache..."
    service apache2 start
    sleep 2
fi

# Verificar puertos
echo "üîç Verificando puertos..."
echo "Puerto 80 (Apache):"
netstat -tlnp | grep :80 || echo "‚ùå Puerto 80 no est√° abierto"

echo "Puerto 8080 (Java):"
netstat -tlnp | grep :8080 || echo "‚ùå Puerto 8080 no est√° abierto"

# Probar conectividad
echo "üîç Probando conectividad..."
echo "Prueba servidor Java (puerto 8080):"
curl -s http://localhost:8080 > /dev/null && echo "‚úÖ Java responde en 8080" || echo "‚ùå Java no responde en 8080"

echo "Prueba Apache (puerto 80):"
curl -s http://localhost:80 > /dev/null && echo "‚úÖ Apache responde en 80" || echo "‚ùå Apache no responde en 80"

# Verificar configuraci√≥n de Apache
echo "üîç Verificando configuraci√≥n de Apache..."
apache2ctl configtest

echo ""
echo "üìã RESUMEN DE CONFIGURACI√ìN"
echo "=========================="
echo "‚úÖ Apache configurado como proxy reverso en puerto 80"
echo "‚úÖ Puerto 80 ‚Üí Puerto 8080"
echo "‚úÖ Headers CORS configurados"
echo "‚úÖ Sitio por defecto deshabilitado"
echo ""
echo "üåê Acceso externo: http://146.83.198.35"
echo "üîí Acceso interno Java: http://localhost:8080"
echo "üîí Acceso interno Apache: http://localhost:80"
echo ""
echo "üìù Comandos √∫tiles:"
echo "   Reiniciar Apache: service apache2 restart"
echo "   Ver logs Apache: tail -f /var/log/apache2/java-proxy_access.log"
echo "   Ver errores Apache: tail -f /var/log/apache2/java-proxy_error.log"
echo "   Verificar configuraci√≥n: apache2ctl configtest"
echo ""
echo "üéØ Ahora deber√≠as poder acceder desde:"
echo "   - Postman: http://146.83.198.35"
echo "   - Browser: http://146.83.198.35"
